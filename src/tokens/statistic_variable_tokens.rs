use std::collections::HashMap;

pub fn get_statistic_variable_tokens() -> HashMap<u8, String> {
    let tokens: HashMap<u8, String> = [
        (0x00, "internal use only".to_string()),
        (0x01, "RegEq".to_string()),
        (0x02, "[n]".to_string()),
        (0x03, "xÃÑ".to_string()),
        (0x04, "Œ£x".to_string()),
        (0x05, "Œ£x¬≤".to_string()),
        (0x06, "Sx".to_string()),
        (0x07, "\u{03c3}x".to_string()),
        (0x08, "minX".to_string()),
        (0x09, "maxX".to_string()),
        (0x0A, "minY".to_string()),
        (0x0B, "maxY".to_string()),
        (0x0C, "»≥".to_string()),
        (0x0D, "Œ£y".to_string()),
        (0x0E, "Œ£y¬≤".to_string()),
        (0x0F, "Sy".to_string()),
        (0x10, "\u{03c3}y".to_string()),
        (0x11, "Œ£xy".to_string()),
        (0x12, "[r]".to_string()),
        (0x13, "Med".to_string()),
        (0x14, "Q‚ÇÅ".to_string()),
        (0x15, "Q‚ÇÉ".to_string()),
        (0x16, "[a]".to_string()),
        (0x17, "[b]".to_string()),
        (0x18, "[c]".to_string()),
        (0x19, "[d]".to_string()),
        (0x1A, "[e]".to_string()),
        (0x1B, "x‚ÇÅ".to_string()),
        (0x1C, "x‚ÇÇ".to_string()),
        (0x1D, "x‚ÇÉ".to_string()),
        (0x1E, "y‚ÇÅ".to_string()),
        (0x1F, "y‚ÇÇ".to_string()),
        (0x20, "y‚ÇÉ".to_string()),
        (0x21, "ùëõ".to_string()),
        (0x22, "[p]".to_string()),
        (0x23, "[z]".to_string()),
        (0x24, "[t]".to_string()),
        (0x25, "œá¬≤".to_string()),
        (0x26, "ùôµ".to_string()),
        (0x27, "df".to_string()),
        (0x28, "pÃÇ".to_string()),
        (0x29, "pÃÇ‚ÇÅ".to_string()),
        (0x2A, "pÃÇ‚ÇÇ".to_string()),
        (0x2B, "xÃÑ‚ÇÅ".to_string()),
        (0x2C, "Sx‚ÇÅ".to_string()),
        (0x2D, "n‚ÇÅ".to_string()),
        (0x2E, "xÃÑ‚ÇÇ".to_string()),
        (0x2F, "Sx‚ÇÇ".to_string()),
        (0x30, "n‚ÇÇ".to_string()),
        (0x31, "Sxp".to_string()),
        (0x32, "lower".to_string()),
        (0x33, "upper".to_string()),
        (0x34, "[s]".to_string()),
        (0x35, "r¬≤".to_string()),
        (0x36, "R¬≤".to_string()),
        (0x37, "Factor df".to_string()),
        (0x38, "Factor SS".to_string()),
        (0x39, "Factor MS".to_string()),
        (0x3A, "Error df".to_string()),
        (0x3B, "Error SS".to_string()),
        (0x3C, "Error MS".to_string()),
    ]
    .iter()
    .cloned()
    .collect();

    tokens
}
